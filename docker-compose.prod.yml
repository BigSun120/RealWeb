version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - INBUCKET_API=http://inbucket:9000/api/v1
    depends_on:
      - inbucket
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs

  # 邮件服务
  inbucket:
    image: docker.m.daocloud.io/inbucket/inbucket:latest
    ports:
      - "9000:9000"  # Web界面
      - "2500:2500"  # SMTP
      - "1100:1100"  # POP3
    environment:
      - INBUCKET_SMTP_DOMAIN=your-domain.com,localhost,test.local
      - INBUCKET_SMTP_ADDR=0.0.0.0:2500
      - INBUCKET_WEB_ADDR=0.0.0.0:9000
      - INBUCKET_POP3_ADDR=0.0.0.0:1100
      - INBUCKET_WEB_CORSORIGIN=https://your-domain.com,http://localhost:3000
      - INBUCKET_STORAGE_TYPE=file
      - INBUCKET_STORAGE_PARAMS=/data
    volumes:
      - inbucket-data:/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis缓存
  redis:
    image: docker.m.daocloud.io/library/redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network
    command: redis-server --appendonly yes

volumes:
  inbucket-data:
  redis-data:

networks:
  app-network:
    driver: bridge